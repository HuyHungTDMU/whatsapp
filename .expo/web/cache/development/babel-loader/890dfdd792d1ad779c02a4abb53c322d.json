{"ast":null,"code":"import moment from \"moment\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../../constants/Colors\";\nimport { View } from \"../Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatMessage = function ChatMessage(props) {\n  var message = props.message;\n\n  var iMyMessage = function iMyMessage() {\n    return message.user.id === 'u1';\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: iMyMessage() ? styles.messageBoxRight : styles.messageBoxLeft,\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: message.user.name\n      }), _jsx(Text, {\n        style: styles.message,\n        children: message.content\n      }), _jsx(Text, {\n        style: styles.time,\n        children: moment(message.createdAt.toString()).format('DD/MM/YYYY')\n      })]\n    })\n  });\n};\n\nexport default ChatMessage;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    padding: 10\n  },\n  messageBoxLeft: {\n    backgroundColor: 'white',\n    marginRight: 50,\n    borderRadius: 5,\n    padding: 10\n  },\n  messageBoxRight: {\n    backgroundColor: '#DCF8C5',\n    marginLeft: 50,\n    borderRadius: 5,\n    padding: 10\n  },\n  name: {\n    color: Colors.light.tint,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  message: {\n    fontSize: 14,\n    color: 'gray'\n  },\n  time: {\n    alignSelf: 'flex-end',\n    fontSize: 12,\n    color: 'gray',\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Hoang Huy Hung/APPS/whatsapp/components/ChatMessage/ChatMessage.tsx"],"names":["moment","React","Colors","View","ChatMessage","props","message","iMyMessage","user","id","styles","container","messageBoxRight","messageBoxLeft","name","content","time","createdAt","toString","format","StyleSheet","create","backgroundColor","padding","marginRight","borderRadius","marginLeft","color","light","tint","fontWeight","marginBottom","fontSize","alignSelf","marginTop"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,MAAP;AACA,SAASC,IAAT;;;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAC7C,MAAQC,OAAR,GAAoBD,KAApB,CAAQC,OAAR;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,WAAOD,OAAO,CAACE,IAAR,CAAaC,EAAb,KAAoB,IAA3B;AACH,GAFD;;AAGA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,UAAU,KAAKG,MAAM,CAACE,eAAZ,GAA8BF,MAAM,CAACG,cAA5D;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA,kBAA2BR,OAAO,CAACE,IAAR,CAAaM;AAAxC,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACJ,OAApB;AAAA,kBAA8BA,OAAO,CAACS;AAAtC,QAFJ,EAGI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA,kBAA2BhB,MAAM,CAACM,OAAO,CAACW,SAAR,CAAkBC,QAAlB,EAAD,CAAN,CAAqCC,MAArC,CAA4C,YAA5C;AAA3B,QAHJ;AAAA;AADJ,IADJ;AASH,CAdD;;AAeA,eAAef,WAAf;AAEA,IAAMM,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,eAAe,EAAE,aADV;AAEPC,IAAAA,OAAO,EAAE;AAFF,GADkB;AAK7BV,EAAAA,cAAc,EAAE;AACZS,IAAAA,eAAe,EAAE,OADL;AAEZE,IAAAA,WAAW,EAAE,EAFD;AAGZC,IAAAA,YAAY,EAAE,CAHF;AAIZF,IAAAA,OAAO,EAAE;AAJG,GALa;AAW7BX,EAAAA,eAAe,EAAE;AACbU,IAAAA,eAAe,EAAE,SADJ;AAEbI,IAAAA,UAAU,EAAE,EAFC;AAGbD,IAAAA,YAAY,EAAE,CAHD;AAIbF,IAAAA,OAAO,EAAE;AAJI,GAXY;AAiB7BT,EAAAA,IAAI,EAAE;AACFa,IAAAA,KAAK,EAAEzB,MAAM,CAAC0B,KAAP,CAAaC,IADlB;AAEFC,IAAAA,UAAU,EAAE,MAFV;AAGFC,IAAAA,YAAY,EAAE;AAHZ,GAjBuB;AAsB7BzB,EAAAA,OAAO,EAAE;AACL0B,IAAAA,QAAQ,EAAE,EADL;AAELL,IAAAA,KAAK,EAAE;AAFF,GAtBoB;AA0B7BX,EAAAA,IAAI,EAAE;AACFiB,IAAAA,SAAS,EAAE,UADT;AAEFD,IAAAA,QAAQ,EAAE,EAFR;AAGFL,IAAAA,KAAK,EAAE,MAHL;AAIFO,IAAAA,SAAS,EAAE;AAJT;AA1BuB,CAAlB,CAAf","sourcesContent":["import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Text } from \"react-native\";\r\nimport { Message } from \"../../types\"; import { StyleSheet } from \"react-native\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport { View } from \"../Themed\";\r\n\r\nexport type ChatMessageProps = {\r\n    message: Message,\r\n}\r\nconst ChatMessage = (props: ChatMessageProps) => {\r\n    const { message } = props;\r\n    const iMyMessage = () => {\r\n        return message.user.id === 'u1';\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={iMyMessage() ? styles.messageBoxRight : styles.messageBoxLeft}>\r\n                <Text style={styles.name}>{message.user.name}</Text>\r\n                <Text style={styles.message}>{message.content}</Text>\r\n                <Text style={styles.time}>{moment(message.createdAt.toString()).format('DD/MM/YYYY')}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\nexport default ChatMessage;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'transparent',\r\n        padding: 10,\r\n    },\r\n    messageBoxLeft: {\r\n        backgroundColor: 'white',\r\n        marginRight: 50,\r\n        borderRadius: 5,\r\n        padding: 10,\r\n    },\r\n    messageBoxRight: {\r\n        backgroundColor: '#DCF8C5',\r\n        marginLeft: 50,\r\n        borderRadius: 5,\r\n        padding: 10,\r\n    },\r\n    name: {\r\n        color: Colors.light.tint,\r\n        fontWeight: 'bold',\r\n        marginBottom: 5,\r\n    },\r\n    message: {\r\n        fontSize: 14,\r\n        color: 'gray'\r\n    },\r\n    time: {\r\n        alignSelf: 'flex-end',\r\n        fontSize: 12,\r\n        color: 'gray',\r\n        marginTop: 5\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}