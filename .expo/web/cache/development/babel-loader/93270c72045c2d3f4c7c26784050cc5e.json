{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons, Octicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { View } from \"../components/Themed\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport ChatsScreen from \"../screens/ChatsScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint\n      },\n      title: 'WhatsApp',\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerBackTitleStyle: {\n        fontSize: 20\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: MainTabNavigator,\n      options: {\n        headerRight: function headerRight() {\n          return _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              width: 60,\n              backgroundColor: 'transparent',\n              justifyContent: 'space-between',\n              marginRight: 10\n            },\n            children: [_jsx(Octicons, {\n              name: \"search\",\n              size: 22,\n              color: \"white\"\n            }), _jsx(MaterialCommunityIcons, {\n              name: \"dots-vertical\",\n              size: 22,\n              color: \"white\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ChatRoom\",\n      component: ChatRoomScreen,\n      options: function options(_ref2) {\n        var route = _ref2.route;\n        return {\n          title: route.params.user.name,\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                width: 100,\n                justifyContent: 'space-between',\n                marginRight: 10,\n                backgroundColor: 'transparent'\n              },\n              children: [_jsx(FontAwesome5, {\n                name: \"video\",\n                size: 22,\n                color: 'white'\n              }), _jsx(MaterialIcons, {\n                name: \"call\",\n                size: 22,\n                color: 'white'\n              }), _jsx(MaterialCommunityIcons, {\n                name: \"dots-vertical\",\n                size: 22,\n                color: 'white'\n              })]\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Contacts\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    })]\n  });\n}\n\nvar MainTab = createMaterialTopTabNavigator();\n\nfunction MainTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(MainTab.Navigator, {\n    initialRouteName: \"Chats\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].background,\n      tabBarStyle: {\n        backgroundColor: Colors[colorScheme].tint\n      }\n    },\n    children: [_jsx(MainTab.Screen, {\n      name: \"Camera\",\n      component: TabOneScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(Fontisto, {\n            name: \"camera\",\n            color: color,\n            style: {\n              fontSize: 20\n            }\n          });\n        },\n        tabBarLabel: function tabBarLabel() {\n          return null;\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Chats\",\n      component: ChatsScreen\n    }), _jsx(MainTab.Screen, {\n      name: \"Status\",\n      component: TabOneScreen\n    }), _jsx(MainTab.Screen, {\n      name: \"Calls\",\n      component: TabOneScreen\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["C:/Hoang Huy Hung/APPS/whatsapp/navigation/index.tsx"],"names":["FontAwesome","FontAwesome5","Fontisto","MaterialCommunityIcons","MaterialIcons","Octicons","createMaterialTopTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","View","Colors","useColorScheme","NotFoundScreen","TabOneScreen","ChatsScreen","LinkingConfiguration","ChatRoomScreen","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","title","headerTintColor","background","headerTitleAlign","headerBackTitleStyle","fontSize","MainTabNavigator","headerRight","flexDirection","width","justifyContent","marginRight","route","params","user","name","MainTab","tabBarActiveTintColor","tabBarStyle","tabBarIcon","color","tabBarLabel","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons, Octicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs'\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { View } from '../components/Themed';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport ChatsScreen from '../screens/ChatsScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport ChatRoomScreen from '../screens/ChatRoomScreen';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n      },\n      title: 'WhatsApp',\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerBackTitleStyle: {\n        fontSize: 20,\n      }\n\n    }}>\n      <Stack.Screen name=\"Root\" component={MainTabNavigator} options={{\n        headerRight: () => (\n          <View style={{ flexDirection: 'row', width: 60, backgroundColor: 'transparent', justifyContent: 'space-between', marginRight: 10 }}>\n            <Octicons name='search' size={22} color='white' />\n            <MaterialCommunityIcons name='dots-vertical' size={22} color='white' />\n          </View>\n        ),\n      }} />\n      {/* <Stack.Screen name=\"ChatRoom\" component={ChatRoomScreen} options={({ route: any }) => { { title: rote } }} /> */}\n      <Stack.Screen\n        name=\"ChatRoom\"\n        component={ChatRoomScreen}\n        options={({ route }) => ({\n          title: route.params.user.name,\n          headerRight: () => (\n            <View style={{\n              flexDirection: 'row',\n              width: 100,\n              justifyContent: 'space-between',\n              marginRight: 10,\n              backgroundColor: 'transparent',\n            }}>\n              <FontAwesome5 name=\"video\" size={22} color={'white'} />\n              <MaterialIcons name=\"call\" size={22} color={'white'} />\n              <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'} />\n            </View>\n          )\n        })}\n      />\n      <Stack.Screen name=\"Contacts\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n\nconst MainTab = createMaterialTopTabNavigator<RootTabParamList>();\n\nfunction MainTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <MainTab.Navigator\n      initialRouteName=\"Chats\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].background,\n        tabBarStyle: { backgroundColor: Colors[colorScheme].tint }\n      }}\n    >\n      <MainTab.Screen\n        name=\"Camera\"\n        component={TabOneScreen}\n        options={{\n          tabBarIcon: ({ color }) => <Fontisto name='camera' color={color} style={{ fontSize: 20 }} />,\n          tabBarLabel: () => null,\n        }}\n      />\n      <MainTab.Screen\n        name=\"Chats\"\n        component={ChatsScreen}\n      />\n      <MainTab.Screen\n        name=\"Status\"\n        component={TabOneScreen}\n\n      />\n      <MainTab.Screen\n        name=\"Calls\"\n        component={TabOneScreen}\n      />\n    </MainTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}