{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome, MaterialCommunityIcons, Octicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { View } from \"../components/Themed\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerBackTitleStyle: {\n        fontSize: 20\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerRight: function headerRight() {\n          return _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              width: 60,\n              backgroundColor: 'transparent',\n              justifyContent: 'space-between',\n              marginRight: 10\n            },\n            children: [_jsx(Octicons, {\n              name: \"search\",\n              size: 22,\n              color: \"white\"\n            }), _jsx(MaterialCommunityIcons, {\n              name: \"dots-vertical\",\n              size: 22,\n              color: \"white\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    })]\n  });\n}\n\nvar BottomTab = createMaterialTopTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'WhatsApp',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"home\",\n              color: color\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Hoang Huy Hung',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["C:/Hoang Huy Hung/APPS/whatsapp/navigation/index.tsx"],"names":["FontAwesome","MaterialCommunityIcons","Octicons","createMaterialTopTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","View","Colors","useColorScheme","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","headerTintColor","background","headerTitleAlign","headerBackTitleStyle","fontSize","BottomTabNavigator","headerRight","flexDirection","width","justifyContent","marginRight","title","BottomTab","tabBarActiveTintColor","navigation","tabBarIcon","color","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome, MaterialCommunityIcons, Octicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs'\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { View } from '../components/Themed';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{\n      headerStyle:{\n          backgroundColor: Colors.light.tint,\n        },\n      headerTintColor:Colors.light.background,\n      headerTitleAlign:'left',\n      headerBackTitleStyle:{\n        fontSize:20,\n      }\n    \n    }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ \n        headerRight: () => (\n          <View style={{flexDirection:'row', width: 60, backgroundColor:'transparent', justifyContent: 'space-between', marginRight: 10}}>\n            <Octicons name='search' size={22} color='white'/>\n            <MaterialCommunityIcons name='dots-vertical' size={22} color='white'/>\n          </View>\n        ),\n       }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createMaterialTopTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'WhatsApp',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Hoang Huy Hung',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}