{"ast":null,"code":"import moment from \"moment\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { View, Text } from \"../Themed\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var users = props.users;\n  var user = users;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.lefContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: user.imageUri\n        },\n        style: styles.avatar\n      }), _jsxs(View, {\n        style: styles.midContainer,\n        children: [_jsx(Text, {\n          style: styles.userName,\n          children: user.name\n        }), _jsx(Text, {\n          numberOfLines: 1,\n          style: styles.lastMessage,\n          children: chatRoom.lastMessage.content\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.time,\n      children: moment(chatRoom.lastMessage.createdAt.toString()).format('DD/MM/YYYY')\n    })]\n  });\n};\n\nexport default ContactListItem;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    width: '100vw',\n    justifyContent: 'space-between',\n    padding: 10\n  },\n  lefContainer: {\n    flexDirection: 'row'\n  },\n  midContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n    borderRadius: 50\n  },\n  userName: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  lastMessage: {\n    fontSize: 16,\n    color: 'gray',\n    maxWidth: 200\n  },\n  time: {\n    fontSize: 14,\n    color: 'gray'\n  }\n});","map":{"version":3,"sources":["C:/Hoang Huy Hung/APPS/whatsapp/components/ContactListItem/ContactListItem.tsx"],"names":["moment","React","View","Text","ContactListItem","props","users","user","styles","container","lefContainer","uri","imageUri","avatar","midContainer","userName","name","lastMessage","chatRoom","content","time","createdAt","toString","format","StyleSheet","create","flexDirection","width","justifyContent","padding","height","marginRight","borderRadius","fontWeight","fontSize","color","maxWidth"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,IAAT,EAAeC,IAAf;;;;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAA8B;AAClD,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AACA,MAAMC,IAAI,GAAGD,KAAb;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA,iBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAZ,SAAf;AAAuC,QAAA,KAAK,EAAEJ,MAAM,CAACK;AAArD,QADJ,EAEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,YAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA,oBAA+BR,IAAI,CAACS;AAApC,UADJ,EAEI,KAAC,IAAD;AAAM,UAAA,aAAa,EAAE,CAArB;AAAwB,UAAA,KAAK,EAAER,MAAM,CAACS,WAAtC;AAAA,oBAAoDC,QAAQ,CAACD,WAAT,CAAqBE;AAAzE,UAFJ;AAAA,QAFJ;AAAA,MADJ,EAQI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAACY,IAApB;AAAA,gBAA2BpB,MAAM,CAACkB,QAAQ,CAACD,WAAT,CAAqBI,SAArB,CAA+BC,QAA/B,EAAD,CAAN,CAAkDC,MAAlD,CAAyD,YAAzD;AAA3B,MARJ;AAAA,IADJ;AAYH,CAhBD;;AAkBA,eAAenB,eAAf;AAGA,IAAMI,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,KAAK,EAAE,OAFA;AAGPC,IAAAA,cAAc,EAAE,eAHT;AAIPC,IAAAA,OAAO,EAAE;AAJF,GADkB;AAO7BnB,EAAAA,YAAY,EAAE;AACVgB,IAAAA,aAAa,EAAE;AADL,GAPe;AAU7BZ,EAAAA,YAAY,EAAE;AACVY,IAAAA,aAAa,EAAE,QADL;AAEVE,IAAAA,cAAc,EAAE;AAFN,GAVe;AAc7Bf,EAAAA,MAAM,EAAE;AACJc,IAAAA,KAAK,EAAE,EADH;AAEJG,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,WAAW,EAAE,EAHT;AAIJC,IAAAA,YAAY,EAAE;AAJV,GAdqB;AAoB7BjB,EAAAA,QAAQ,EAAE;AACNkB,IAAAA,UAAU,EAAE,MADN;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GApBmB;AAwB7BjB,EAAAA,WAAW,EAAE;AACTiB,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GAxBgB;AA6B7BhB,EAAAA,IAAI,EAAE;AACFc,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE;AAFL;AA7BuB,CAAlB,CAAf","sourcesContent":["import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Image } from 'react-native'\r\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport { User } from \"../../types\";\r\nimport { View, Text } from \"../Themed\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport type ChatListItemProps = {\r\n    users: User;\r\n}\r\n\r\nconst ContactListItem = (props: ChatListItemProps) => {\r\n    const { users } = props;\r\n    const user = users;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.lefContainer}>\r\n                <Image source={{ uri: user.imageUri }} style={styles.avatar} />\r\n                <View style={styles.midContainer}>\r\n                    <Text style={styles.userName}>{user.name}</Text>\r\n                    <Text numberOfLines={1} style={styles.lastMessage}>{chatRoom.lastMessage.content}</Text>\r\n                </View>\r\n            </View>\r\n            <Text style={styles.time}>{moment(chatRoom.lastMessage.createdAt.toString()).format('DD/MM/YYYY')}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        width: '100vw',\r\n        justifyContent: 'space-between',\r\n        padding: 10\r\n    },\r\n    lefContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    midContainer: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    avatar: {\r\n        width: 60,\r\n        height: 60,\r\n        marginRight: 10,\r\n        borderRadius: 50\r\n    },\r\n    userName: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n    },\r\n    lastMessage: {\r\n        fontSize: 16,\r\n        color: 'gray',\r\n        maxWidth: 200\r\n    },\r\n    time: {\r\n        fontSize: 14,\r\n        color: 'gray'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}